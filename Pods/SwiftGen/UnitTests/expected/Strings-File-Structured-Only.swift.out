// Generated using SwiftGen, by O.Halligon â€” https://github.com/AliSoftware/SwiftGen

import Foundation

// swiftlint:disable file_length
// swiftlint:disable line_length

// swiftlint:disable type_body_length
// swiftlint:disable nesting

enum L10n {

  case Settings(SettingsL10n)
  enum SettingsL10n {

    case NavigationBar(NavigationBarL10n)
    enum NavigationBarL10n {
      /// Some Reserved Keyword there
      case `Self`

      case Title(TitleL10n)
      enum TitleL10n {

        case Even(EvenL10n)
        enum EvenL10n {
          /// Settings
          case Deeper
        }
      }
    }

    case UserProfileSection(UserProfileSectionL10n)
    enum UserProfileSectionL10n {
      /// Here you can change some user profile settings.
      case FooterText
      /// User Profile Settings
      case HEADERTITLE
      /// Welcome %@! You have %d points on your account.
      case Points(String, Int)
    }
  }
}

extension L10n: CustomStringConvertible {
  var description: String { return self.string }

  var string: String {
    switch self {
      case .Settings(let level1key):

        switch level1key {
          case .NavigationBar(let level2key):

            switch level2key {
              case .`Self`:
                return L10n.tr("settings.navigation-bar.self")
              case .Title(let level3key):

                switch level3key {
                  case .Even(let level4key):

                    switch level4key {
                      case .Deeper:
                        return L10n.tr("settings.navigation-bar.title.even.deeper")
                    }
                }
            }
          case .UserProfileSection(let level2key):

            switch level2key {
              case .FooterText:
                return L10n.tr("seTTings.uSer-proFile-sectioN.footer_text")
              case .HEADERTITLE:
                return L10n.tr("SETTINGS.USER_PROFILE_SECTION.HEADER_TITLE")
              case .Points(let p0, let p1):
                return L10n.tr("settings.user_profile_section.points", p0, p1)
            }
        }
    }
  }

  private static func tr(key: String, _ args: CVarArgType...) -> String {
    let format = NSLocalizedString(key, comment: "")
    return String(format: format, locale: NSLocale.currentLocale(), arguments: args)
  }
}

// swiftlint:enable type_body_length
// swiftlint:enable nesting

func tr(key: L10n) -> String {
  return key.string
}
