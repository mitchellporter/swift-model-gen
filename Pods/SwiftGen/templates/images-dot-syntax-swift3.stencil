// Generated using SwiftGen, by O.Halligon â€” https://github.com/AliSoftware/SwiftGen

{% if catalogs %}
#if os(iOS) || os(tvOS) || os(watchOS)
  import UIKit.UIImage
  typealias Image = UIImage
#elseif os(OSX)
  import AppKit.NSImage
  typealias Image = NSImage
#endif

// swiftlint:disable file_length
// swiftlint:disable line_length
// swiftlint:disable nesting

struct {{enumName}}Type: ExpressibleByStringLiteral {
  fileprivate var value: String

  var image: UIImage {
    return UIImage(asset: self)
  }

  public init(stringLiteral value: String) {
    self.value = value
  }

  public init(extendedGraphemeClusterLiteral value: String) {
    self.init(stringLiteral: value)
  }

  public init(unicodeScalarLiteral value: String) {
    self.init(stringLiteral: value)
  }
}

// swiftlint:disable type_body_length
enum {{enumName}} {
  {# for correct indentation #}
  {% set tb %}{% if catalogs.count > 1 %}  {% endif %}{% endset %}

  {# CATALOG LEVEL #}
  {% for catalog in catalogs %}
  {% if catalogs.count > 1 %}
  enum {{catalog.name|swiftIdentifier|titlecase|snakeToCamelCase}} {
  {% endif %}
{{tb}}  {# ASSETS ROOT LEVEL #}
{{tb}}  {% for image in catalog.assets %}
{{tb}}  {% ifnot image.items %}
{{tb}}  static let {{image.name|swiftIdentifier|snakeToCamelCase|lowerFirstWord}}: AssetType = "{{image.value}}"
{{tb}}  {% else %}
{{tb}}
{{tb}}  enum {{image.name|swiftIdentifier|titlecase|snakeToCamelCase}} {
{{tb}}    {# LEVEL 1 #}
{{tb}}    {% for subimage1 in image.items %}
{{tb}}    {% ifnot subimage1.items %}
{{tb}}    static let {{subimage1.name|swiftIdentifier|snakeToCamelCase|lowerFirstWord}}: AssetType = "{{subimage1.value}}"
{{tb}}    {% else %}
{{tb}}
{{tb}}    enum {{subimage1.name|swiftIdentifier|titlecase|snakeToCamelCase}} {
{{tb}}      {# LEVEL 2 #}
{{tb}}      {% for subimage2 in subimage1.items %}
{{tb}}      {% ifnot subimage2.items %}
{{tb}}      static let {{subimage2.name|swiftIdentifier|snakeToCamelCase|lowerFirstWord}}: AssetType = "{{subimage2.value}}"
{{tb}}      {% else %}
{{tb}}
{{tb}}      enum {{subimage2.name|swiftIdentifier|titlecase|snakeToCamelCase}} {
{{tb}}        {# LEVEL 3 #}
{{tb}}        {% for subimage3 in subimage2.items %}
{{tb}}        {% ifnot subimage3.items %}
{{tb}}        static let {{subimage3.name|swiftIdentifier|snakeToCamelCase|lowerFirstWord}}: AssetType = "{{subimage3.value}}"
{{tb}}        {% else %}
{{tb}}
{{tb}}        enum {{subimage3.name|swiftIdentifier|titlecase|snakeToCamelCase}} {
{{tb}}          {# LEVEL 4 #}
{{tb}}          {% for subimage4 in subimage3.items %}
{{tb}}          {% ifnot subimage4.items %}
{{tb}}          static let {{subimage4.name|swiftIdentifier|snakeToCamelCase|lowerFirstWord}}: AssetType = "{{subimage4.value}}"
{{tb}}          {% else %}
{{tb}}
{{tb}}          enum {{subimage4.name|swiftIdentifier|titlecase|snakeToCamelCase}} {
{{tb}}            {# LEVEL 5 #}
{{tb}}            {% for subimage5 in subimage4.items %}
{{tb}}            {% ifnot subimage5.items %}
{{tb}}            static let {{subimage5.name|swiftIdentifier|snakeToCamelCase|lowerFirstWord}}: AssetType = "{{subimage5.value}}"
{{tb}}            {% else %}
{{tb}}            // This should not exist!
{{tb}}            {% endif %}
{{tb}}            {% endfor %}
{{tb}}          }
{{tb}}          {% endif %}
{{tb}}          {% endfor %}
{{tb}}        }
{{tb}}        {% endif %}
{{tb}}        {% endfor %}
{{tb}}      }
{{tb}}      {% endif %}
{{tb}}      {% endfor %}
{{tb}}    }
{{tb}}    {% endif %}
{{tb}}    {% endfor %}
{{tb}}  }
{{tb}}  {% endif %}
{{tb}}  {% endfor %}
  {% if catalogs.count > 1 %}
  }
  {% endif %}
  {% endfor %}
}
// swiftlint:enable type_body_length

extension Image {
  convenience init!(asset: {{enumName}}Type) {
    self.init(named: asset.value)
  }
}
{% else %}
// No image found
{% endif %}
